import { tool } from "ai";
import { z } from "zod";
import getPools from "./getPools"; // –ü–æ–¥–∫–ª—é—á–∞–µ–º getPools, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ —Ä—ã–Ω–∫–∞–º


const bestLend = tool({
  description: "Lend an asset to the best available pool on the selected protocol.",
  parameters: z.object({
    asset: z.string().describe("The asset to stake (e.g., USDT, USDC, BTC, ETH, APT)."),
    amount: z.number().describe("The amount of the asset to lend (or use the entire wallet balance)."),
  }),
  execute: async ({ asset, amount }) => {
    try {
      console.log("üîç bestLend request:", { asset, amount });

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∞–∫—Ç–∏–≤ –æ–¥–Ω–∏–º –∏–∑ —Å—Ç–µ–π–±–ª–∫–æ–∏–Ω–æ–≤
      const stablecoins = ["USDT", "USDC"]; // –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å—Ç–µ–π–±–ª–∫–æ–∏–Ω—ã
      const stablecoinKeywords = ["USD", "stablecoins", "stables", "dollars"]; // –û–±—â–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è —Å—Ç–µ–π–±–ª–∫–æ–∏–Ω–æ–≤

      // –ï—Å–ª–∏ –∞–∫—Ç–∏–≤ ‚Äî —ç—Ç–æ –æ–¥–∏–Ω –∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å—Ç–µ–π–±–ª–∫–æ–∏–Ω–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, USDT, USDC), —Ç–æ –∏—â–µ–º –ø–æ –Ω–µ–º—É
      const searchAsset = stablecoins.includes(asset) 
        ? asset
        // –ï—Å–ª–∏ –∞–∫—Ç–∏–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–¥–Ω–æ–º—É –∏–∑ –æ–±—â–∏—Ö —Å—Ç–µ–π–±–ª–∫–æ–∏–Ω–æ–≤ (USD, stablecoins, stables, dollars)
        : stablecoinKeywords.some(keyword => asset.toLowerCase().includes(keyword.toLowerCase())) 
        ? "USD"
        : asset;

      // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ª—É—á—à–∏–µ –ø—É–ª—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞–∫—Ç–∏–≤–∞
      const poolsResponse = await getPools.execute({ asset: searchAsset }, { toolCallId: "bestLend", messages: [] });

      if (poolsResponse.error) {
        throw new Error(poolsResponse.error);
      }

      const bestPool = poolsResponse.table ? poolsResponse.table[0] : null;

      if (!bestPool) {
        throw new Error(`‚ùå No pool found for asset: ${asset}`);
      }

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
      return {
        protocol: bestPool.protocol,
        apr: bestPool.totalAPY,
        asset: bestPool.asset, // –ú—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –ø—É–ª–∞, –±–µ–∑ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—É–ª
        token: bestPool.token,
        amount: amount.toFixed(6), // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–µ–π–∫–Ω—É—Ç–æ–≥–æ –∞–∫—Ç–∏–≤–∞
      };
    } catch (error) {
      return { error: error.message };
    }
  },
});

export default bestLend;
